
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
		
		Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
			// Параметры:
//   КомандыСозданияНаОсновании - Строка - имена ролей, доступность которых проверяется, разделенные запятыми.- 
		
		
		Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
			
			КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
			КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
			КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
			КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
			
			Возврат КомандаСоздатьНаОсновании;
			
		КонецЕсли;
		
		Возврат Неопределено;
		
	КонецФункции
	
	Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
		// Анкета
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Анкета";
		КомандаПечати.Представление = НСтр("ru = 'Анкета клиента'");
		КомандаПечати.Порядок = 5;
		
		// Товарная накладная
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Накладная";
		КомандаПечати.Представление = НСтр("ru = 'Товарная накладная'");
		КомандаПечати.Порядок = 10;   
		
		// Комплект документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Анкета,Накладная";
		КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
		КомандаПечати.Порядок = 75;  
		
		// Договор
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ДоговорDOCX";
		КомандаПечати.Представление = НСтр("ru = 'Договор (MS Word)'");
		КомандаПечати.Картинка = БиблиотекаКартинок.ФорматWord2007;
		
		
	КонецПроцедуры    
	
		Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
		
		// Печать Анкеты
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Анкета");
		Если ПечатнаяФорма <> Неопределено Тогда
			ПечатнаяФорма.ТабличныйДокумент = ПечатьАнкеты(МассивОбъектов, ОбъектыПечати);
			ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Анкета клиента'");
			ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ДЗ_Доставка.ПФ_MXL_АнкетаКлиента";
		КонецЕсли;
		
		// Печать Накладной
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Накладная");
		Если ПечатнаяФорма <> Неопределено Тогда
			ПечатнаяФорма.ТабличныйДокумент = ПечатьНакладной(МассивОбъектов, ОбъектыПечати);
			ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Товарная накладная'");
			ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ДЗ_Доставка.ПФ_MXL_ТоварнаяНакладная";
		КонецЕсли;  
		
		// Печать Договора
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ДоговорDOCX");
		Если ПечатнаяФорма <> Неопределено Тогда
			ОфисныеДокументы = НапечататьДоговорDOCX(МассивОбъектов);  
			ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Договор (MS Word)'");
			ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;
		КонецЕсли;
		
	КонецПроцедуры
	
	
	#КонецОбласти  
	
	#Область СлужебныеПроцедурыИФункции  
	
	Функция ПечатьАнкеты(МассивОбъектов, ОбъектыПечати)   
		
		ТабличныйДокумент = Новый ТабличныйДокумент;   
		ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Анкета";   	
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДЗ_Доставка.ПФ_MXL_АнкетаКлиента");  
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");  
		ОбластьТело = Макет.ПолучитьОбласть("Тело");   		
		
		ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);   
		
		ПервыйДокумент = Истина;   
		
		Пока ДанныеДокументов.Следующий()Цикл 						
			
			Если Не ПервыйДокумент Тогда
				// Все документы нужно выводить на разных страницах.
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли; 
			
			ПервыйДокумент = Ложь;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1; 			
			
			ДанныеПечати = Новый Структура;
			ДанныеПечати.Вставить("Дата", Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
			ДанныеПечати.Вставить("Номер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер)); 
			ДанныеПечати.Вставить("Контрагент", ДанныеДокументов.Контрагент);
			
			ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ПолучитьНавигационнуюСсылку(ДанныеДокументов.Ссылка), 1, 120);
			Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
				|Технические подробности см. в журнале регистрации.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Иначе
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОбластьЗаголовок.Рисунки.QRКод.Картинка = КартинкаQRКода;
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.Заполнить(ДанныеПечати); 
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			ОбластьТело.Параметры.Заполнить(ДанныеПечати); 
			ТабличныйДокумент.Вывести(ОбластьТело);  
			
			// В табличном документе необходимо задать имя области, в которую был 
			// выведен объект. Нужно для возможности печати комплектов документов.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);	
			
		КонецЦикла; 
		Возврат ТабличныйДокумент;
		
	КонецФункции   
	
	Функция ПечатьНакладной(МассивОбъектов, ОбъектыПечати)
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Накладная";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДЗ_Доставка.ПФ_MXL_ТоварнаяНакладная");
		
		ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
		
		ПервыйДокумент = Истина;
		
		Пока ДанныеДокументов.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				// Все документы нужно выводить на разных страницах.
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ВывестиЗаголовокЗаказа(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиТовары(ДанныеДокументов, ТабличныйДокумент, Макет); 
			
			ВывестиПодвалНакладной(ДанныеДокументов, ТабличныйДокумент, Макет);  
			
			
			// В табличном документе необходимо задать имя области, в которую был 
			// выведен объект. Нужно для возможности печати комплектов документов.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
			
		КонецЦикла;	
		
		Возврат ТабличныйДокумент;
		
	КонецФункции
	
	Функция ПолучитьДанныеДокументов(МассивОбъектов)
		
		
		
		
		
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДЗ_Доставка.Ссылка КАК Ссылка,
		|	ДЗ_Доставка.Номер КАК Номер,
		|	ДЗ_Доставка.Дата КАК Дата,
		|	ДЗ_Доставка.Контрагент КАК Контрагент,
		|	ДЗ_Доставка.Организация КАК Организация,
		|	ДЗ_Доставка.Товары.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество
		|	) КАК Товары
		|ИЗ
		|	Документ.ДЗ_Доставка КАК ДЗ_Доставка
		|ГДЕ
		|	ДЗ_Доставка.Ссылка В(&МассивОбъектов)";  
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		Возврат Запрос.Выполнить().Выбрать();
		
	КонецФункции   		
	
	
	Функция НапечататьДоговорDOCX(МассивОбъектов)
		// Создаём пустое соответствие для размещения печатных форм OpenXМL — результат функции
		ОфисныеДокументы = Новый Соответствие;
		
		// Готовим макет для формирования печатной формы OpenXML
		МакетДокумента = ПолучитьМакет("ПФ_DOCX_Договор");   
		Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента,Неопределено);  
		Если Макет = Неопределено Тогда
			Возврат "";
		КонецЕсли;
		
		// Создаём структуру областей формируемой печатной формы OpenXМL
		ОписаниеОбластей = Новый Структура; 
		
		
		УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Шапка", "Общая");
		УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ПредметДоговора", "Общая"); 
		УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Подвал", "Общая");  
		
		
		// Получаем данные для печати из базы данных
		// Функцию ДанныеДляПечатиДоговора необходимо разработать самостоятельно
		ДанныеДляПечати = ДанныеДляПечатиДоговора(МассивОбъектов);  
		
		Для Каждого ДанныеПечати Из ДанныеДляПечати Цикл
			
			ДанныеПечати.Дата = Формат(ДанныеПечати.Дата, "ДЛФ=DD");
			
			ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
			
			Если ПечатнаяФорма = Неопределено Тогда
				УправлениеПечатью.ОчиститьСсылки(Макет);
				Возврат ОфисныеДокументы;
			КонецЕсли;
			
			// Вывод верхней части документа - обычная область с параметрами.
			Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Шапка"]);
			УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеПечати);	   
			
			// Вывод основной части предмета договора - обычная область с параметрами.
			Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ПредметДоговора"]);
			УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеПечати);	 
			
			
			// Вывод подвала документа
			Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Подвал"]);
			УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеПечати);  
			
			
			АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма); 
			
			УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);
			
			ОфисныеДокументы.Вставить(АдресХранилищаПечатнойФормы, Строка(ДанныеПечати.Ссылка));
			
		КонецЦикла;        
		
		УправлениеПечатью.ОчиститьСсылки(Макет);
		
		Возврат ОфисныеДокументы;
		
	КонецФункции  
	
	
	Функция ДанныеДляПечатиДоговора(МассивОбъектов)
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	&ДатаПечати КАК ДатаПечати,
		|	ДЗ_Доставка.Ссылка КАК Ссылка,
		|	ДЗ_Доставка.Номер КАК Номер,
		|	ДЗ_Доставка.Дата КАК Дата,
		|	ДЗ_Доставка.Контрагент КАК Контрагент,
		|	ДЗ_Доставка.Организация КАК Организация,
		|	ДЗ_Доставка.Товары.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество
		|	) КАК Товары,
		|	ДЗ_Доставка.АдресДоставки КАК АдресДоставки,
		|	ДЗ_Доставка.Организация.ИНН КАК ОрганизацияИНН,
		|	ДЗ_Доставка.Организация.КПП КАК ОрганизацияКПП,
		|	ДЗ_Доставка.Контрагент.ИНН КАК КонтрагентИНН,
		|	ДЗ_Доставка.Контрагент.КПП КАК КонтрагентКПП
		|ИЗ
		|	Документ.ДЗ_Доставка КАК ДЗ_Доставка
		|ГДЕ
		|	ДЗ_Доставка.Ссылка В(&МассивОбъектов)";  
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов); 
		Запрос.Параметры.Вставить("ДатаПечати", Формат (ТекущаяДатаСеанса(),"ДЛФ=DD"));
		
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Запрос.Выполнить().Выгрузить());
		
	КонецФункции   		
	
	
	
	Процедура ВывестиЗаголовокЗаказа(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
		
		ДанныеПечати = Новый Структура;
		
		ШаблонЗаголовка = "Транспортная накладная %1 от %2";
		ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);  
		
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ПолучитьНавигационнуюСсылку(ДанныеДокументов.Ссылка), 1, 120);
		Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			КартинкаQRКода = Новый Картинка(ДанныеQRКода);
			ОбластьЗаголовокДокумента.Рисунки.QRКод.Картинка = КартинкаQRКода;
		КонецЕсли;   
		
		ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
		
	КонецПроцедуры   
	
	Процедура ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
		ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель");
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("ПредставлениеПоставщика", ДанныеДокументов.Организация);
		ДанныеПечати.Вставить("ПредставлениеПокупателя", ДанныеДокументов.Контрагент);
		
		ОбластьПоставщик.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьПоставщик);
		
		ОбластьПокупатель.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьПокупатель);
		
	КонецПроцедуры
	
	Процедура ВывестиТовары(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура ВывестиПодвалНакладной(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьПодвалНакладной = Макет.ПолучитьОбласть("ПодвалНакладной");
		
		ТабличныйДокумент.Вывести(ОбластьПодвалНакладной);
		
	КонецПроцедуры
	
	#КонецОбласти 
	
#КонецЕсли   



